package com.ROTH.Framwork;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import java.util.Stack;

import com.sun.org.apache.regexp.internal.recompile;

import quicktime.qd3d.math.Vector2D;

public class ROTHDesktopController implements ROTHController, KeyListener {

	
	ArrayList<Character> actions = new ArrayList<Character>();
	Vector2D direction;
		
	public Vector2D getMoveVector() {
		
		return direction;
	}


	public ArrayList<Character> getActionList() {
		return actions;
	}

	@Override
	public void keyPressed(KeyEvent e) {
		
		if(e.equals(KeyEvent.VK_W) || e.equals(KeyEvent.VK_UP)){
			direction.setY(1);
		}else if(e.equals(KeyEvent.VK_S) || e.equals(KeyEvent.VK_DOWN)){
			direction.setY(-1);
		}else if(e.equals(KeyEvent.VK_A) || e.equals(KeyEvent.VK_LEFT)){
			direction.setX(-1);
		}else if(e.equals(KeyEvent.VK_D) || e.equals(KeyEvent.VK_RIGHT)){
			direction.setX(1);
		}else
			System.out.println(e.getKeyChar());
		
	}

	@Override
	public void keyReleased(KeyEvent e) {
		
		if(e.equals(KeyEvent.VK_W) || e.equals(KeyEvent.VK_UP)){
			direction.setY(-1);
		}else if(e.equals(KeyEvent.VK_S) || e.equals(KeyEvent.VK_DOWN)){
			direction.setY(1);
		}else if(e.equals(KeyEvent.VK_A) || e.equals(KeyEvent.VK_LEFT)){
			direction.setX(1);
		}else if(e.equals(KeyEvent.VK_D) || e.equals(KeyEvent.VK_RIGHT)){
			direction.setX(-1);
		}
		
		
	}

	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}

}
